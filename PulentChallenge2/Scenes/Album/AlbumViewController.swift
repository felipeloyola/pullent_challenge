//
//  AlbumViewController.swift
//  PulentChallenge2
//
//  Created by Felipe Loyola on 28-07-20.
//  Copyright (c) 2020 Felipe Loyola. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import AlamofireImage
import UIKit

final class AlbumViewController: UIViewController, UITableViewDelegate, UITableViewDataSource {
    @IBOutlet weak var albumImage: UIImageView!
    @IBOutlet weak var albumName: UILabel!
    @IBOutlet weak var artistName: UILabel!
    @IBOutlet weak var songsTable: UITableView!
    // MARK: - Public properties -

    var presenter: AlbumPresenterInterface!
    var songs: [AlbumSongViewModel] = []

    // MARK: - Lifecycle -

    override func viewDidLoad() {
        super.viewDidLoad()
        self.songsTable.delegate = self
        self.songsTable.dataSource = self
        let nib = UINib(nibName: "\(SongInAlbumCell.self)", bundle: Bundle.main)
        self.songsTable.register(nib, forCellReuseIdentifier: "\(SongInAlbumCell.self)")
        self.presenter.load()
    }

    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return songs.count
    }

    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let song = self.songs[indexPath.row]
        if let cell = tableView.dequeueReusableCell(withIdentifier: "\(SongInAlbumCell.self)") as? SongInAlbumCell {
            cell.configure(song: song)
            return cell
        }
        return UITableViewCell()
    }
}

// MARK: - Extensions -

extension AlbumViewController: AlbumViewInterface {
    func showNoSongFoundAlert() {
        let alert = self.createAlert(with: "Alerta", message: "No se encontraron canciones para este album")
        navigationController?.present(alert, animated: true, completion: nil)
    }

    func showErrorOnServerAlert() {
        let alert = self.createAlert(with: "Alerta", message: "Hubo un problema en el servidor")
        navigationController?.present(alert, animated: true, completion: nil)
    }

    func showSongs(songs: [AlbumSongViewModel]) {
        self.songs = songs
        self.songsTable.reloadData()
    }

    func showAlbum(album: AlbumViewModel) {
        self.albumName.text = album.name
        self.artistName.text = album.artist
        if let theURL = URL(string: album.imageURL) {
            self.albumImage.af.setImage(withURL: theURL)
        }
    }
}
